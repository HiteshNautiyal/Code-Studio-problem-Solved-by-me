#include <bits/stdc++.h> 
/****************************************************************
    Following is the class structure of the Node class:
    class Node
    {
    public:
        int data;
        Node *next;
        Node(int data)
        {
            this->data = data;
            this->next = NULL;
        }
    };
*****************************************************************/

Node *removeDuplicates(Node *head)
{
    //empty list
    if(head == NULL)
    return NULL;

    //we use normal map :- time complexity high
    //that's why we use "unordered map" 
    
    unordered_map<int, bool>visited;//mapping krdenge when elements in a list comes a single time
    //non-empty list
    Node* curr = head;
    while(curr->next != NULL)
    {
        visited[curr->data] = true;
        if(visited[curr->next->data] == true)
        {
            Node* next = curr->next->next;
            Node* delete_node = curr->next;
            delete(delete_node);
            curr->next = next;
        }
        else
        curr = curr->next;

    }
    return head;
}
