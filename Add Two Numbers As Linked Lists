#include <bits/stdc++.h> 
/****************************************************************

    Following is the class structure of the Node class:

        class Node
        {
        public:
            int data;
	        Node *next;
            Node(int data)
            {
                this->data = data;
                this->next = NULL;
            }
        };

*****************************************************************/

     /* for addition 
    step 1 : carry = 0
    step 2 : find sum
    step 3 : find digit, digit = sum % 10
    strep 4 : create node for digit
    step 5 : carry nikalo, carry = sum / 10
    */
    
    void insertAtTail(Node* &head, Node* &tail , int val)
    {
        Node* temp = new Node(val);
        //empty list
        if(head == NULL)
        {
            head = temp;
            tail = temp;
            return;
        }
        else
        {
            tail->next = temp;
            tail = temp;
            return;
        }
    }

    Node* add(Node* &head1, Node* &head2)
    {
        int carry = 0;
        Node* ansHead = NULL;
        Node* ansTail = NULL;
        while(head1 != NULL and head2 != NULL)
        {
            int sum = carry + head1->data + head2->data;
            int digit = sum % 10;
            
            
            //create a node and add in answer lists
            insertAtTail(ansHead, ansTail , digit);
            
            carry = sum / 10;
            
            head1 = head1->next;
            head2 = head2->next;
        }
        
        while(head1 != NULL)
        {
            int sum = carry + head1->data;
            int digit = sum % 10;
            
            insertAtTail(ansHead, ansTail, digit);
            
            carry = sum / 10;
            head1  = head1->next;
        }
        
        while(head2 != NULL)
        {
            int sum = carry + head2->data;
            int digit = sum % 10;
            insertAtTail(ansHead, ansTail, digit);
            
            carry = sum / 10;
            head2 = head2->next;
        }
        
        while(carry != 0)
        {
            int sum = carry;
            int digit = sum % 10;
            insertAtTail(ansHead, ansTail, digit);
            
            carry = sum / 10;
            
        }
        return ansHead;
    }
    
Node *addTwoNumbers(Node *head1, Node *head2)
{
    // step 1 : reverse input lists
        // head1 = reverse(head1);
        // head2 = reverse(head2);
        
        //step 2 : add 2 lists
        Node* ans  = add(head1, head2);
        
        //step 3 
        //ans = reverse(ans);
        
        return ans;
}
