#include <bits/stdc++.h> 
#include <bits/stdc++.h> 
int findDuplicate(vector<int> &arr, int n){
	// This is O(n^2) approach!!!
    
    // in this solution : we traverse the array 2 times and check one by one that array element is duplicate or not???
//     bool flag = false;
//     int x;
//     for(int i=0;i<n-1;i++)
//     {
//         for(int j=i+1;j<n;j++)
//         {
//             if(arr[i]==arr[j])
//             {  
//                 flag = true;
//                 x = arr[i];
//                  break;
//             }
//         }
//         if(flag)
//             break;
//     }
//     return x;
    
    
    //this is O(n) approach!!!
    
    //in this solution: first we count their frequencies & then we check that whose frequency is more than 1 that means that's my answer...
    int freq[100000] = {0};
    int x;//becoz we return 'int'datatype so we store our answer in 'int' type...
    for(int i=0;i<n;i++)
    {
        int index = arr[i] + 0;
        freq[index]++;
    }
    
    for(int i=0;i<100000;i++)
    {
        if(freq[i] > 1)
        {
            x = i;
            break;
        }
    }
    
    return x;
        
    
}
