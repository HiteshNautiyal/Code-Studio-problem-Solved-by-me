/*
     O(N^2) Approach :-

vector<int> nextSmallerElement(vector<int> &arr, int n)
{
    //we find next right smaller elements 
    
    vector<int> v;

    for(int i=0; i<n ;i++)
    {
        bool flag = false;
        for(int j=i+1; j<n; j++)
        {
            if(arr[j] < arr[i])
            {
                v.push_back(arr[j]);
                flag = true;
                break;

            }
        }
        if(flag == false)
        v.push_back(-1);

    }
    return v;
    
}
*/
#include<stack>
vector<int> nextSmallerElement(vector<int> &arr, int n)
{
    stack<int> s;
    s.push(-1);

    vector<int> ans(n);
    for(int i=n-1; i>=0; i--)
    {
        int curr = arr[i];
        while(s.top() >= curr)
        {
            s.pop();
        }
        //if curr is greater than top 
        //ans is stack ka top
        ans[i] = (s.top());
        s.push(curr);
    }
    return ans;
}
